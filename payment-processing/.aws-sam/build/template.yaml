AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  ValidatePaymentFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: validate_payment.lambda_handler
      Runtime: python3.12
      CodeUri: ValidatePaymentFunction
      Policies:
      - AWSLambdaBasicExecutionRole
    Metadata:
      SamResourceId: ValidatePaymentFunction
  ProcessPaymentFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: process_payment.lambda_handler
      Runtime: python3.12
      CodeUri: ProcessPaymentFunction
      Policies: AWSLambdaBasicExecutionRole
    Metadata:
      SamResourceId: ProcessPaymentFunction
  UpdatePaymentStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: update_payment_status.lambda_handler
      Runtime: python3.12
      CodeUri: UpdatePaymentStatusFunction
      Policies:
      - AWSLambdaBasicExecutionRole
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          Resource:
            Fn::GetAtt:
            - OrdersTable
            - Arn
    Metadata:
      SamResourceId: UpdatePaymentStatusFunction
  SendNotificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: send_notification.lambda_handler
      Runtime: python3.12
      CodeUri: SendNotificationFunction
      Policies:
      - AWSLambdaBasicExecutionRole
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - sns:List*
          - sns:Publish
          Resource:
            Ref: OrderNotificationsTopic
    Metadata:
      SamResourceId: SendNotificationFunction
  HandlePaymentErrorFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: handle_payment_error.lambda_handler
      Runtime: python3.12
      CodeUri: HandlePaymentErrorFunction
      Policies:
      - AWSLambdaBasicExecutionRole
    Metadata:
      SamResourceId: HandlePaymentErrorFunction
  OrdersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Orders
      AttributeDefinitions:
      - AttributeName: PaymentId
        AttributeType: S
      KeySchema:
      - AttributeName: PaymentId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  OrderNotificationsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: OrderNotifications
  PaymentProcessingStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        Fn::Sub: "{\n  \"Comment\": \"Payment processing workflow triggered via API\
          \ Gateway\",\n  \"StartAt\": \"ValidatePayment\",\n  \"States\": {\n   \
          \ \"ValidatePayment\": {\n      \"Type\": \"Task\",\n      \"Resource\"\
          : \"${ValidatePaymentFunction.Arn}\",\n      \"Next\": \"ProcessPayment\"\
          \n    },\n    \"ProcessPayment\": {\n      \"Type\": \"Task\",\n      \"\
          Resource\": \"${ProcessPaymentFunction.Arn}\",\n      \"Retry\": [\n   \
          \     {\n          \"ErrorEquals\": [\"TransientError\"],\n          \"\
          IntervalSeconds\": 5,\n          \"MaxAttempts\": 3,\n          \"BackoffRate\"\
          : 2\n        }\n      ],\n      \"Catch\": [\n        {\n          \"ErrorEquals\"\
          : [\"States.ALL\"],\n          \"Next\": \"HandlePaymentError\"\n      \
          \  }\n      ],\n      \"Next\": \"UpdatePaymentStatus\"\n    },\n    \"\
          UpdatePaymentStatus\": {\n      \"Type\": \"Task\",\n      \"Resource\"\
          : \"${UpdatePaymentStatusFunction.Arn}\",\n      \"Next\": \"SendNotification\"\
          \n    },\n    \"SendNotification\": {\n      \"Type\": \"Task\",\n     \
          \ \"Resource\": \"${SendNotificationFunction.Arn}\",\n      \"End\": true\n\
          \    },\n    \"HandlePaymentError\": {\n      \"Type\": \"Task\",\n    \
          \  \"Resource\": \"${HandlePaymentErrorFunction.Arn}\",\n      \"Next\"\
          : \"UpdatePaymentStatus\"\n    }\n  }\n}\n"
      RoleArn:
        Fn::GetAtt:
        - StepFunctionsExecutionRole
        - Arn
  StepFunctionsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: states.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: StepFunctionsExecutionPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - lambda:InvokeFunction
            Resource:
            - Fn::GetAtt:
              - ValidatePaymentFunction
              - Arn
            - Fn::GetAtt:
              - ProcessPaymentFunction
              - Arn
            - Fn::GetAtt:
              - UpdatePaymentStatusFunction
              - Arn
            - Fn::GetAtt:
              - SendNotificationFunction
              - Arn
            - Fn::GetAtt:
              - HandlePaymentErrorFunction
              - Arn
  PaymentAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        swagger: '2.0'
        info:
          title: PaymentAPI
          version: '1.0'
        paths:
          /startPayment:
            post:
              summary: Initiate Payment Processing
              description: Initiate the payment processing workflow in Step Functions.
              consumes:
              - application/json
              produces:
              - application/json
              parameters:
              - in: body
                name: body
                required: true
                schema:
                  type: object
                  properties:
                    payment_details:
                      type: object
                      properties:
                        card_number:
                          type: string
                          description: The card number for payment.
                        expiry_date:
                          type: string
                          description: The expiry date of the card (MM/YY format).
                        cvv:
                          type: string
                          description: The CVV code of the card.
                        amount:
                          type: number
                          description: The amount to be paid.
              responses:
                '200':
                  description: Successful response
                  schema:
                    type: object
                    properties:
                      statusCode:
                        type: integer
                      body:
                        type: string
              x-amazon-apigateway-integration:
                type: AWS
                httpMethod: POST
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:states:action/StartExecution
                credentials:
                  Fn::GetAtt:
                  - PaymentAPIGWRole
                  - Arn
                requestTemplates:
                  application/json:
                    Fn::Sub: "{\n  \"stateMachineArn\": \"${PaymentProcessingStateMachine}\"\
                      ,\n  \"input\": \"$util.escapeJavaScript($input.json('$'))\"\
                      \n}\n"
                responses:
                  default:
                    statusCode: '200'
                    responseTemplates:
                      application/json: "{\n  \"statusCode\": 200,\n  \"body\": $input.json('$.output')\n\
                        }\n"
  PaymentAPIGWRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: apigateway.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: ApiGatewayInvokeStepFunctionsPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: states:StartExecution
            Resource:
              Ref: PaymentProcessingStateMachine
Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${PaymentAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod/startPayment
